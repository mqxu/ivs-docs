import{_ as a,c as d,a as r,o as e}from"./app-CeA8JgzT.js";const s={};function n(h,t){return e(),d("div",null,t[0]||(t[0]=[r('<h1 id="性能测试报告" tabindex="-1"><a class="header-anchor" href="#性能测试报告"><span>性能测试报告</span></a></h1><hr><h2 id="一、性能测试目标与评估指标" tabindex="-1"><a class="header-anchor" href="#一、性能测试目标与评估指标"><span>一、性能测试目标与评估指标</span></a></h2><h3 id="_1-1-测试目标" tabindex="-1"><a class="header-anchor" href="#_1-1-测试目标"><span>1.1 测试目标</span></a></h3><ul><li>验证系统在高并发下的稳定性和响应能力，确保主要业务流程（如用户扫码充电、车辆管理、数据大屏查询）在用户量骤增时可持续提供服务。</li><li>发现与定位可能存在的性能瓶颈，为后续优化和弹性扩展提供依据。</li></ul><h3 id="_1-2-评估指标" tabindex="-1"><a class="header-anchor" href="#_1-2-评估指标"><span>1.2 评估指标</span></a></h3><table><thead><tr><th>指标</th><th>说明</th><th>行业基线/推荐标准</th></tr></thead><tbody><tr><td>平均响应时间</td><td>用户发起请求到收到响应的时间</td><td>&lt; 500ms（核心接口）</td></tr><tr><td>最大响应时间</td><td>高峰并发下最慢一次响应的耗时</td><td>&lt; 2s</td></tr><tr><td>QPS</td><td>每秒查询/请求处理能力</td><td>≥ 1000 QPS</td></tr><tr><td>并发用户数</td><td>能支持的同时在线用户数</td><td>≥ 2000</td></tr><tr><td>资源占用</td><td>CPU/内存/网络带宽等资源的消耗</td><td>单实例 CPU &lt; 80%</td></tr><tr><td>错误率</td><td>压测期间出现错误或超时的请求比例</td><td>&lt; 0.1%</td></tr></tbody></table><hr><h2 id="二、关键接口-功能的压力测试方案" tabindex="-1"><a class="header-anchor" href="#二、关键接口-功能的压力测试方案"><span>二、关键接口/功能的压力测试方案</span></a></h2><h3 id="_2-1-覆盖接口与场景" tabindex="-1"><a class="header-anchor" href="#_2-1-覆盖接口与场景"><span>2.1 覆盖接口与场景</span></a></h3><table><thead><tr><th>功能/接口</th><th>场景描述</th><th>备注</th></tr></thead><tbody><tr><td>用户登录 /api/user/login</td><td>高频短连接、并发用户登录</td><td>认证、令牌分发</td></tr><tr><td>车辆管理 /api/vehicle/*</td><td>查询、添加、删除、绑定/解绑</td><td>数据库压力</td></tr><tr><td>充电服务 /api/charge/*</td><td>扫码启动、实时状态、结束结算</td><td>高并发、事务一致性</td></tr><tr><td>轨迹查询 /api/track/*</td><td>行驶轨迹、能耗分析</td><td>历史大数据查询</td></tr><tr><td>大屏数据 /api/dashboard/*</td><td>运营大屏实时刷新、图表渲染</td><td>大量数据并发拉取</td></tr></tbody></table><h3 id="_2-2-压力测试方案举例" tabindex="-1"><a class="header-anchor" href="#_2-2-压力测试方案举例"><span>2.2 压力测试方案举例</span></a></h3><ul><li><strong>登录接口压力测试</strong>：模拟 1000 并发用户在 1 分钟内不断登录，统计平均/最大响应时间和错误率。</li><li><strong>充电启动/停止接口</strong>：持续发起并发充电请求，模拟实际桩点业务高峰。</li><li><strong>历史数据/大屏接口</strong>：批量查询多种时间跨度的数据，考察数据库/缓存的承载能力。</li></ul><hr><h2 id="三、测试工具与环境说明" tabindex="-1"><a class="header-anchor" href="#三、测试工具与环境说明"><span>三、测试工具与环境说明</span></a></h2><h3 id="_3-1-工具选型" tabindex="-1"><a class="header-anchor" href="#_3-1-工具选型"><span>3.1 工具选型</span></a></h3><ul><li><strong>JMeter</strong>：主流接口/压力测试工具，支持复杂场景模拟、分布式压测。</li><li><strong>Locust</strong>：Python 脚本化压力测试，适合模拟复杂用户行为和实时监控。</li><li><strong>Apifox</strong>：接口测试与性能压测一体，便于团队协作和报告归档。</li></ul><h3 id="_3-2-测试环境说明" tabindex="-1"><a class="header-anchor" href="#_3-2-测试环境说明"><span>3.2 测试环境说明</span></a></h3><ul><li><strong>硬件环境</strong>：阿里云 4 核 8G 云服务器，千兆网络。</li><li><strong>部署架构</strong>：前后端分离，Nginx+SpringBoot+MySQL+Redis。</li><li><strong>数据准备</strong>：测试数据库批量导入真实或 Mock 数据，模拟实际用户量和业务压力。</li></ul><hr><h2 id="四、性能瓶颈分析与优化建议" tabindex="-1"><a class="header-anchor" href="#四、性能瓶颈分析与优化建议"><span>四、性能瓶颈分析与优化建议</span></a></h2><h3 id="_4-1-瓶颈分析示例" tabindex="-1"><a class="header-anchor" href="#_4-1-瓶颈分析示例"><span>4.1 瓶颈分析示例</span></a></h3><ul><li><strong>数据库慢查询</strong>：大数据量下，轨迹回放与历史能耗查询响应明显变慢，SQL 语句未命中索引。</li><li><strong>充电状态推送延迟</strong>：并发充电时 WebSocket 消息偶发堆积，前端接收延迟。</li><li><strong>接口并发瓶颈</strong>：部分业务逻辑串行执行，CPU 利用率高，QPS 达不到预期。</li></ul><h3 id="_4-2-优化建议" tabindex="-1"><a class="header-anchor" href="#_4-2-优化建议"><span>4.2 优化建议</span></a></h3><ul><li>针对慢查询，优化 SQL、增加必要索引，定期归档历史大表（如<code>charge_record</code>、<code>energy_data</code>）。</li><li>充电推送采用异步消息队列（如 RabbitMQ、Kafka）缓冲高峰流量，前端优化消息消费逻辑。</li><li>后端业务解耦、微服务分流，接口层缓存热点数据，提升整体并发能力。</li><li>合理分配硬件资源，核心接口独立部署，服务集群自动扩容。</li></ul><hr><h2 id="五、测试数据与结果归档要求" tabindex="-1"><a class="header-anchor" href="#五、测试数据与结果归档要求"><span>五、测试数据与结果归档要求</span></a></h2><ul><li><strong>归档内容</strong>：每次压测的配置文件、脚本、Mock/真实数据样本、原始测试报告（CSV、HTML、PDF）与分析结论。</li><li><strong>存储要求</strong>：统一归档于项目 <code>/test/performance/</code> 目录，版本管理，支持随时回查。</li><li><strong>追踪建议</strong>：建立性能基线档案，后续版本迭代都需对比，及时发现性能回退或隐患。</li></ul>',28)]))}const l=a(s,[["render",n]]),o=JSON.parse('{"path":"/testing/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95%E6%8A%A5%E5%91%8A.html","title":"性能测试报告","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1752849335000,"contributors":[{"name":"mqxu","username":"mqxu","email":"moqi1977@gmail.com","commits":1,"url":"https://github.com/mqxu"}],"changelog":[{"hash":"af37f38c248b743a0fbb96095eaa9b8b46b743f9","time":1752849335000,"email":"moqi1977@gmail.com","author":"mqxu","message":"feat: 初始化文档站"}]},"filePathRelative":"testing/性能测试报告.md"}');export{l as comp,o as data};
