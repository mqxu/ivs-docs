import{_ as s,c as n,a as i,o as e}from"./app-CeA8JgzT.js";const l={};function r(t,a){return e(),n("div",null,a[0]||(a[0]=[i(`<h1 id="系统-系统架构设计" tabindex="-1"><a class="header-anchor" href="#系统-系统架构设计"><span>系统 系统架构设计</span></a></h1><hr><h2 id="一、系统整体分层架构图" tabindex="-1"><a class="header-anchor" href="#一、系统整体分层架构图"><span>一、系统整体分层架构图</span></a></h2><h3 id="_1-分层结构概述" tabindex="-1"><a class="header-anchor" href="#_1-分层结构概述"><span>1. 分层结构概述</span></a></h3><ul><li><strong>前端层</strong>：采用 UniApp/Vue3，实现移动 App、小程序、Web 页面等多端适配，负责交互展示、页面逻辑与数据可视化（ECharts）。</li><li><strong>业务服务层</strong>：基于 SpringBoot，RESTful 架构，承担所有业务逻辑与安全校验。</li><li><strong>数据持久层</strong>：MySQL 为主关系型数据库，支撑车辆、用户、充电、日志等数据高效存储。</li><li><strong>可视化与数据分析层</strong>：ECharts 集成于前端/管理后台，实时渲染能耗、轨迹、运营大屏。</li></ul><h3 id="_2-mermaid-架构图示例" tabindex="-1"><a class="header-anchor" href="#_2-mermaid-架构图示例"><span>2. Mermaid 架构图示例</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">graph TD</span>
<span class="line">  A[移动端/小程序/Pad&lt;br/&gt;UniApp/Vue3]</span>
<span class="line">  B[可视化层&lt;br/&gt;ECharts/地图]</span>
<span class="line">  C[前端接口层]</span>
<span class="line">  D[SpringBoot后端服务]</span>
<span class="line">  E[业务模块: 用户、车辆、充电、告警、统计]</span>
<span class="line">  F[数据库&lt;br/&gt;MySQL]</span>
<span class="line">  G[第三方平台&lt;br/&gt;地图/充电桩API]</span>
<span class="line"></span>
<span class="line">  A --&gt; B</span>
<span class="line">  A --&gt; C</span>
<span class="line">  C --&gt; D</span>
<span class="line">  D --&gt; E</span>
<span class="line">  E --&gt; F</span>
<span class="line">  D --&gt; G</span>
<span class="line">  B --数据流--&gt; C</span>
<span class="line">  G --API--&gt; D</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="归档要点" tabindex="-1"><a class="header-anchor" href="#归档要点"><span>归档要点</span></a></h4><ul><li>分层架构图须配详细说明，归档于“系统设计”专章，建议每大版本同步更新。</li></ul><hr><h2 id="二、功能模块划分与主要接口关系" tabindex="-1"><a class="header-anchor" href="#二、功能模块划分与主要接口关系"><span>二、功能模块划分与主要接口关系</span></a></h2><h3 id="_1-功能模块" tabindex="-1"><a class="header-anchor" href="#_1-功能模块"><span>1. 功能模块</span></a></h3><ul><li>用户管理（注册/登录、认证、权限分级）</li><li>车辆管理（车辆信息、状态、绑定/解绑）</li><li>充电服务（地图找桩、扫码充电、充电记录）</li><li>消息通知（告警推送、消息中心）</li><li>数据中心/历史分析（充电、轨迹、能耗、报表导出）</li><li>管理后台（用户、车辆、权限、统计）</li><li>可视化大屏（ECharts 实时展示）</li></ul><h3 id="_2-主要接口关系表" tabindex="-1"><a class="header-anchor" href="#_2-主要接口关系表"><span>2. 主要接口关系表</span></a></h3><table><thead><tr><th>前端模块</th><th>主要 API 接口</th><th>说明</th></tr></thead><tbody><tr><td>登录注册</td><td>/api/auth/login</td><td>账号/微信一键登录</td></tr><tr><td>车辆管理</td><td>/api/vehicle/*</td><td>查询、绑定、解绑</td></tr><tr><td>充电服务</td><td>/api/charge/*</td><td>查桩、扫码、启动、历史</td></tr><tr><td>消息通知</td><td>/api/notice/*</td><td>获取消息、告警推送</td></tr><tr><td>数据分析</td><td>/api/history/*</td><td>数据趋势、导出、统计</td></tr><tr><td>大屏可视化</td><td>/api/dashboard/data</td><td>ECharts 前端拉取实时数据</td></tr><tr><td>后台管理</td><td>/api/admin/*</td><td>权限、车辆、用户、操作日志</td></tr></tbody></table><h4 id="归档要点-1" tabindex="-1"><a class="header-anchor" href="#归档要点-1"><span>归档要点</span></a></h4><ul><li>所有模块接口需自动生成 Swagger/OpenAPI 文档，归档 API 清单、接口联调说明。</li></ul><hr><h2 id="三、服务部署与通信机制" tabindex="-1"><a class="header-anchor" href="#三、服务部署与通信机制"><span>三、服务部署与通信机制</span></a></h2><ul><li><strong>部署模式</strong>：支持 Docker/K8s 一键容器化部署，前后端分离架构可独立扩容和弹性伸缩。</li><li><strong>服务通信</strong>： <ul><li><strong>RESTful API</strong>：前端与后端、后端与第三方平台均采用 RESTful JSON 接口通信。</li><li><strong>WebSocket</strong>：充电状态推送、实时告警等采用 WebSocket 双向通信，提升交互实时性。</li><li><strong>任务调度</strong>：Spring 定时任务处理数据采集、定期分析、告警通知。</li></ul></li><li><strong>第三方集成</strong>：通过 API 密钥+回调机制对接高德/腾讯地图、充电桩平台。</li></ul><h4 id="mermaid-通信机制图" tabindex="-1"><a class="header-anchor" href="#mermaid-通信机制图"><span>Mermaid 通信机制图</span></a></h4><div class="language-mermaid line-numbers-mode" data-highlighter="prismjs" data-ext="mermaid"><pre><code class="language-mermaid"><span class="line"><span class="token keyword">sequenceDiagram</span></span>
<span class="line">    <span class="token keyword">participant</span> App as 前端</span>
<span class="line">    <span class="token keyword">participant</span> API as RESTful接口</span>
<span class="line">    <span class="token keyword">participant</span> WS as WebSocket</span>
<span class="line">    <span class="token keyword">participant</span> BE as SpringBoot后端</span>
<span class="line">    <span class="token keyword">participant</span> MySQL as 数据库</span>
<span class="line">    <span class="token keyword">participant</span> Third as 第三方平台</span>
<span class="line"></span>
<span class="line">    App<span class="token arrow operator">-&gt;&gt;</span>API<span class="token operator">:</span> 用户操作请求</span>
<span class="line">    API<span class="token arrow operator">-&gt;&gt;</span>BE<span class="token operator">:</span> 业务处理</span>
<span class="line">    BE<span class="token arrow operator">-&gt;&gt;</span>MySQL<span class="token operator">:</span> 数据读写</span>
<span class="line">    BE<span class="token arrow operator">-&gt;&gt;</span>Third<span class="token operator">:</span> 调用外部API</span>
<span class="line">    BE<span class="token arrow operator">--&gt;&gt;</span>WS<span class="token operator">:</span> 状态/告警推送</span>
<span class="line">    WS<span class="token arrow operator">-&gt;&gt;</span>App<span class="token operator">:</span> 实时消息</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="归档要点-2" tabindex="-1"><a class="header-anchor" href="#归档要点-2"><span>归档要点</span></a></h4><ul><li>通信机制及部署架构须配流程图、端口规范和云/本地部署脚本归档。</li></ul><hr><h2 id="四、技术选型理由与行业主流方案" tabindex="-1"><a class="header-anchor" href="#四、技术选型理由与行业主流方案"><span>四、技术选型理由与行业主流方案</span></a></h2><ul><li><strong>UniApp/Vue3</strong>：跨端开发，移动、Web、小程序一套代码，生态活跃、维护方便，适合智能车载场景。</li><li><strong>SpringBoot</strong>：轻量级、组件丰富、支持微服务，适合 RESTful API 和高并发场景，行业广泛采用。</li><li><strong>MySQL</strong>：关系型数据库，事务与查询能力强，适合车辆/用户/业务数据高一致性要求。</li><li><strong>ECharts</strong>：支持大屏可视化、动态图表，适合运营数据、能耗趋势和多维分析。</li><li><strong>容器化/Docker/K8s</strong>：自动化部署、弹性伸缩、环境一致性，便于企业级落地。</li></ul><h4 id="行业对比说明" tabindex="-1"><a class="header-anchor" href="#行业对比说明"><span>行业对比说明</span></a></h4><ul><li>选型均符合主流车联网/智能硬件/大数据平台标准，可无缝迁移至阿里云、腾讯云等主流云平台。</li><li>方案适配企业级安全、合规与持续集成。</li></ul><hr><h2 id="五、安全性与高可用性设计" tabindex="-1"><a class="header-anchor" href="#五、安全性与高可用性设计"><span>五、安全性与高可用性设计</span></a></h2><ul><li><strong>权限与认证</strong>：OAuth2/JWT 统一鉴权，分角色权限控制，支持 API 接口分级授权。</li><li><strong>数据加密</strong>：敏感数据 AES 加密存储，传输全程 HTTPS。</li><li><strong>日志审计</strong>：操作/异常日志自动归档、支持溯源。</li><li><strong>高可用</strong>：前后端多实例、主从/分库分表、读写分离，接口自动降级与容灾。</li><li><strong>接口防护</strong>：防 SQL 注入、XSS、CSRF 攻击，限流与验证码防刷。</li></ul><h4 id="归档要点-3" tabindex="-1"><a class="header-anchor" href="#归档要点-3"><span>归档要点</span></a></h4><ul><li>安全与高可用策略需有配置文档、应急预案与测试报告归档。</li></ul><hr><h2 id="六、可扩展性与多端支持" tabindex="-1"><a class="header-anchor" href="#六、可扩展性与多端支持"><span>六、可扩展性与多端支持</span></a></h2><ul><li><strong>模块化微服务</strong>：支持独立功能模块上线、扩展新业务（如 AI 驾驶、车载 IoT）。</li><li><strong>多端适配</strong>：移动 App、Web、小程序、Pad 端统一框架，代码高度复用。</li><li><strong>API 开放</strong>：预留第三方开放接口，支持后续智能家居、企业大屏等扩展。</li><li><strong>数据接口</strong>：数据标准化，便于外部系统对接与后期数据治理。</li></ul><h4 id="归档要点-4" tabindex="-1"><a class="header-anchor" href="#归档要点-4"><span>归档要点</span></a></h4><ul><li>扩展性设计、API 开放规范与多端适配测试报告须同步归档。</li></ul><hr><h2 id="七、推荐架构图绘制工具" tabindex="-1"><a class="header-anchor" href="#七、推荐架构图绘制工具"><span>七、推荐架构图绘制工具</span></a></h2><ul><li><strong>Mermaid</strong>：Markdown/文档内嵌，便于团队快速协作与版本管理。</li><li><strong>PlantUML</strong>：专业级 UML、系统组件与流程图，支持源码归档。</li><li><strong>ProcessOn</strong>：Web 可协作，适合团队原型和结构协作归档。</li><li><strong>Draw.io（diagrams.net）</strong>：导出多格式、易归档与 PPT 汇报。</li></ul>`,42)]))}const p=s(l,[["render",r]]),o=JSON.parse('{"path":"/architecture/%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1.html","title":"系统 系统架构设计","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1752849335000,"contributors":[{"name":"mqxu","username":"mqxu","email":"moqi1977@gmail.com","commits":1,"url":"https://github.com/mqxu"}],"changelog":[{"hash":"af37f38c248b743a0fbb96095eaa9b8b46b743f9","time":1752849335000,"email":"moqi1977@gmail.com","author":"mqxu","message":"feat: 初始化文档站"}]},"filePathRelative":"architecture/系统架构设计.md"}');export{p as comp,o as data};
