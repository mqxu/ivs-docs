import{_ as n,c as a,a as p,o as t}from"./app-CeA8JgzT.js";const e={};function o(l,s){return t(),a("div",null,s[0]||(s[0]=[p(`<p>以下为**《Mock 数据.md》高标准归档稿**，结合智能车载系统全业务场景，便于前端独立开发、接口联调、自动化测试及归档评优，同时支持AIGC一键批量生成和Mock平台导入。</p><hr><h1 id="mock-数据" tabindex="-1"><a class="header-anchor" href="#mock-数据"><span>Mock 数据</span></a></h1><hr><h2 id="一、各模块核心业务场景下的模拟数据结构" tabindex="-1"><a class="header-anchor" href="#一、各模块核心业务场景下的模拟数据结构"><span>一、各模块核心业务场景下的模拟数据结构</span></a></h2><h3 id="_1-车辆状态" tabindex="-1"><a class="header-anchor" href="#_1-车辆状态"><span>1. 车辆状态</span></a></h3><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json"><pre><code class="language-json"><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">501</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;plate_number&quot;</span><span class="token operator">:</span> <span class="token string">&quot;粤A12345&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;brand&quot;</span><span class="token operator">:</span> <span class="token string">&quot;BYD&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;新能源SUV&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;status&quot;</span><span class="token operator">:</span> <span class="token string">&quot;在线&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;energy&quot;</span><span class="token operator">:</span> <span class="token number">68.5</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;mileage&quot;</span><span class="token operator">:</span> <span class="token number">30500</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;location&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;lng&quot;</span><span class="token operator">:</span> <span class="token number">113.323</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;lat&quot;</span><span class="token operator">:</span> <span class="token number">23.119</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;last_report_time&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2025-07-17T09:25:30&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-用户列表" tabindex="-1"><a class="header-anchor" href="#_2-用户列表"><span>2. 用户列表</span></a></h3><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json"><pre><code class="language-json"><span class="line"><span class="token punctuation">[</span></span>
<span class="line">  <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">10001</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;username&quot;</span><span class="token operator">:</span> <span class="token string">&quot;alice&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;real_name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;王小丽&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;role&quot;</span><span class="token operator">:</span> <span class="token string">&quot;car_owner&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;status&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;bind_vehicles&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">501</span><span class="token punctuation">,</span> <span class="token number">502</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;created_at&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2025-01-01T13:32:25&quot;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">10002</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;username&quot;</span><span class="token operator">:</span> <span class="token string">&quot;bob&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;real_name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;李强&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;role&quot;</span><span class="token operator">:</span> <span class="token string">&quot;admin&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;status&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;bind_vehicles&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;created_at&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2025-01-04T09:15:02&quot;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-充电记录" tabindex="-1"><a class="header-anchor" href="#_3-充电记录"><span>3. 充电记录</span></a></h3><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json"><pre><code class="language-json"><span class="line"><span class="token punctuation">[</span></span>
<span class="line">  <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">90001</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;user_id&quot;</span><span class="token operator">:</span> <span class="token number">10001</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;vehicle_id&quot;</span><span class="token operator">:</span> <span class="token number">501</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;pile_id&quot;</span><span class="token operator">:</span> <span class="token number">2001</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;start_time&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2025-07-16T10:01:11&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;end_time&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2025-07-16T12:23:12&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;energy&quot;</span><span class="token operator">:</span> <span class="token number">34.2</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;cost&quot;</span><span class="token operator">:</span> <span class="token number">17.45</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;status&quot;</span><span class="token operator">:</span> <span class="token string">&quot;完成&quot;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-告警记录" tabindex="-1"><a class="header-anchor" href="#_4-告警记录"><span>4. 告警记录</span></a></h3><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json"><pre><code class="language-json"><span class="line"><span class="token punctuation">[</span></span>
<span class="line">  <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">6001</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;vehicle_id&quot;</span><span class="token operator">:</span> <span class="token number">501</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;低电量&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;description&quot;</span><span class="token operator">:</span> <span class="token string">&quot;电量低于15%，请尽快充电&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;level&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;status&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;create_time&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2025-07-17T08:30:00&quot;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="二、典型数据样本与格式说明" tabindex="-1"><a class="header-anchor" href="#二、典型数据样本与格式说明"><span>二、典型数据样本与格式说明</span></a></h2><ul><li>推荐使用 <strong>JSON</strong> 结构，支持RESTful接口直接返回。</li><li>大数据量场景可支持 <strong>CSV</strong> 格式批量导入导出，如下：</li></ul><p><strong>充电记录CSV示例</strong></p><table><thead><tr><th>id</th><th>user_id</th><th>vehicle_id</th><th>pile_id</th><th>start_time</th><th>end_time</th><th>energy</th><th>cost</th><th>status</th></tr></thead><tbody><tr><td>90001</td><td>10001</td><td>501</td><td>2001</td><td>2025-07-16T10:01:11</td><td>2025-07-16T12:23:12</td><td>34.2</td><td>17.45</td><td>完成</td></tr><tr><td>90002</td><td>10002</td><td>502</td><td>2002</td><td>2025-07-15T14:05:02</td><td>2025-07-15T15:28:16</td><td>21.7</td><td>10.80</td><td>完成</td></tr></tbody></table><hr><h2 id="三、前端开发用-mock-接口设计与自动生成方法" tabindex="-1"><a class="header-anchor" href="#三、前端开发用-mock-接口设计与自动生成方法"><span>三、前端开发用 Mock 接口设计与自动生成方法</span></a></h2><h3 id="_1-接口设计规范" tabindex="-1"><a class="header-anchor" href="#_1-接口设计规范"><span>1. 接口设计规范</span></a></h3><ul><li>路径与后端一致，如 <code>/api/vehicle/list</code>、<code>/api/charge/history</code></li><li>支持 GET/POST/PUT/DELETE 常用方法，参数、响应结构完全模拟真实接口</li><li>建议采用 RESTful 路由和统一响应格式，如：</li></ul><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json"><pre><code class="language-json"><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;code&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;msg&quot;</span><span class="token operator">:</span> <span class="token string">&quot;success&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span> ... <span class="token punctuation">]</span>   <span class="token comment">// 或对象</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-自动生成方法" tabindex="-1"><a class="header-anchor" href="#_2-自动生成方法"><span>2. 自动生成方法</span></a></h3><ul><li><strong>Mock.js</strong>（前端本地/Node环境）：直接定义模板，自动随机生成批量数据</li><li><strong>Apifox/EasyMock/YApi</strong>：在线可视化定义接口结构，支持字段规则、随机数据生成、团队协作</li><li><strong>Faker.js/FakeAPI</strong>：辅助生成用户、日期、数值等批量样本</li></ul><p><strong>Mock.js 车辆列表示例代码</strong></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line">Mock<span class="token punctuation">.</span><span class="token function">mock</span><span class="token punctuation">(</span><span class="token string">&#39;/api/vehicle/list&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token string-property property">&quot;code&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token string-property property">&quot;msg&quot;</span><span class="token operator">:</span> <span class="token string">&quot;success&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token string-property property">&quot;data|5-10&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token string-property property">&quot;id|+1&quot;</span><span class="token operator">:</span> <span class="token number">1000</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string-property property">&quot;plate_number&quot;</span><span class="token operator">:</span> <span class="token string">&quot;@string(&#39;upper&#39;,2)@integer(10000,99999)&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string-property property">&quot;brand|1&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;BYD&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;特斯拉&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;蔚来&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;小鹏&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string-property property">&quot;status|1&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;在线&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;离线&quot;</span><span class="token punctuation">]</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="四、mock-工具推荐" tabindex="-1"><a class="header-anchor" href="#四、mock-工具推荐"><span>四、Mock 工具推荐</span></a></h2><ul><li><strong>Mock.js</strong>：适合Vue/React/UniApp前端开发，语法灵活，支持随机数据模板</li><li><strong>Apifox</strong>：一体化接口管理/测试/Mock，团队协作、文档联动</li><li><strong>EasyMock/YApi</strong>：国产开源，适合团队快速Mock和线上共享</li><li><strong>Faker.js</strong>：辅助生成各类字段值，配合Mock.js提升真实感</li></ul><hr><h2 id="五、mock-数据与真实数据的切换机制" tabindex="-1"><a class="header-anchor" href="#五、mock-数据与真实数据的切换机制"><span>五、Mock 数据与真实数据的切换机制</span></a></h2><ul><li><strong>前端本地开发</strong>：配置环境变量（如 <code>VITE_USE_MOCK=true</code>），启用本地Mock Server或Mock.js拦截</li><li><strong>线上/测试环境</strong>：通过代理转发或网关路由实现API切换，后端可根据Header/Token判别是否返回模拟数据</li><li><strong>统一切换建议</strong>： <ul><li>Mock与真实接口URL/结构保持完全一致</li><li>配置中心或环境变量（如<code>process.env.NODE_ENV</code>）控制Mock开关</li><li>接口响应内可加<code>mock: true</code>字段便于联调和问题定位</li></ul></li></ul><hr><h2 id="六、测试与开发场景应用建议" tabindex="-1"><a class="header-anchor" href="#六、测试与开发场景应用建议"><span>六、测试与开发场景应用建议</span></a></h2><ul><li><strong>前端独立开发阶段</strong>：全部启用Mock数据，实现页面、交互开发与UI联调</li><li><strong>后端接口开发同步</strong>：保持接口一致性，便于前后端无阻塞并行</li><li><strong>自动化测试</strong>：批量生成边界/异常场景数据，提高单元测试和集成测试覆盖率</li><li><strong>演示/验收环境</strong>：可用特定Mock数据快速演示不同业务流程、告警、充电等多场景</li></ul>`,36)]))}const i=n(e,[["render",o]]),r=JSON.parse('{"path":"/development/Mock%E6%95%B0%E6%8D%AE.html","title":"Mock 数据","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1752849335000,"contributors":[{"name":"mqxu","username":"mqxu","email":"moqi1977@gmail.com","commits":1,"url":"https://github.com/mqxu"}],"changelog":[{"hash":"af37f38c248b743a0fbb96095eaa9b8b46b743f9","time":1752849335000,"email":"moqi1977@gmail.com","author":"mqxu","message":"feat: 初始化文档站"}]},"filePathRelative":"development/Mock数据.md"}');export{i as comp,r as data};
